% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ot_indices.R
\name{ot_indices}
\alias{ot_indices}
\title{Calculate Optimal Transport sensitivity indices for multivariate y}
\usage{
ot_indices(
  x,
  y,
  M,
  solver = "sinkhorn",
  solver_optns = NULL,
  scaling = TRUE,
  extended_out = FALSE
)
}
\arguments{
\item{x}{A data.frame containing the input(s) values. The values can be numeric, factors or strings.}

\item{y}{A matrix containing the output values. Each column represents a different output variable, and each row represents a different observation. Only numeric values are allowed.}

\item{M}{A scalar representing the number of partitions for continuous inputs.}

\item{solver}{(optional) Solver for the Optimal Transport problems: \code{sinkhorn} (default), \code{sinkhorn_log}, or \code{wasserstein}.}

\item{solver_optns}{(optional) Options for the Optimal Transport solver. See details for allowed options.}

\item{scaling}{(default \code{TRUE}) Logical that sets whether or not to scale the cost matrix.}

\item{extended_out}{(default \code{FALSE}) Logical indicating if the function should return the inner statistics and the partitions.}
}
\value{
An object containing:
\itemize{
\item \code{indices}: sensitivity indices between 0 and 1 for each column in x, indicating the influence of each input variable on the output variables.
\item \code{IS}: values of the inner statistics for the partitions defined by \code{partitions}. Returned only if \code{extended_out = TRUE}.
\item \code{partitions}: the partitions built to calculate the sensitivity indices. Returned only if \code{extended_out = TRUE}.
}
}
\description{
\code{ot_indices} calculates sensitivity indices using Optimal Transport (OT) for multivariate output data \code{y} with respect to input data \code{x}.
Sensitivity indices measure the influence of input variables on output variables, with values ranging between 0 and 1.
}
\details{
The solvers of the OT problem implemented in this package can be divided into two categories: standard and entropic. And then bla, blabla, blablabla
}
\examples{
N <- 1000

mx <- c(1, 1, 1)
Sigmax <- matrix(data = c(1, 0.5, 0.5, 0.5, 1, 0.5, 0.5, 0.5, 1), nrow = 3)

x1 <- rnorm(N)
x2 <- rnorm(N)
x3 <- rnorm(N)

x <- cbind(x1, x2, x3)
x <- mx + x \%*\% chol(Sigmax)

A <- matrix(data = c(4, -2, 1, 2, 5, -1), nrow = 2, byrow = TRUE)
y <- t(A \%*\% t(x))

x <- data.frame(x)

M <- 25

# Calculate sensitivity indices
sensitivity_indices <- ot_indices(x, y, M)
sensitivity_indices

# With extended output
sensitivity_indices_extended <- ot_indices(x, y, M, extended_out = TRUE)
sensitivity_indices_extended

}
